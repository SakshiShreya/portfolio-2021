@import "../../../utilities/partials/colorCodes";

$box-border-radius: 15%;
$duration: 1.5s;

.loader {
  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
}

.box {
  position: relative;
  display: block;
  transform-origin: -50% center;
  border-radius: $box-border-radius;

  &::after {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    right: 0;
    background-color: map-get($map: $orange, $key: "normal");
    border-radius: $box-border-radius;
  }

  &:nth-child(1) {
    &::after {
      animation: color-change $duration ease-in-out infinite alternate;
    }
  }

  @for $i from 1 to 5 {
    &:nth-child(#{$i + 1}) {
      animation: flip-#{$i} $duration ease-in-out infinite alternate;
      &:after {
        background-color: map-get($map: $orange, $key: "light" + $i);
        animation: squidge-#{$i} $duration ease-in-out infinite alternate;
      }
    }
  }
}

@keyframes color-change {
  0% {
    background-color: map-get($map: $orange, $key: "normal");
  }
  100% {
    background-color: map-get($map: $orange, $key: "light5");
  }
}

@for $i from 1 to 5 {
  @keyframes flip-#{$i} {
    0%,
    #{$i * 15%} {
      transform: rotate(0);
    }
    #{$i * 15 + 20%},
    100% {
      transform: rotate(-180deg);
    }
  }

  @keyframes squidge-#{$i} {
    #{$i * 15% - 10%} {
      transform-origin: center bottom;
      transform: scaleX(1) scaleY(1);
    }
    #{$i * 15%} {
      transform-origin: center bottom;
      transform: scaleX(1.3) scaleY(0.7);
    }
    #{$i * 15% + 5%},
    #{$i * 15% + 10%} {
      transform-origin: center bottom;
      transform: scaleX(0.8) scaleY(1.4);
    }
    #{$i * 15% + 25%} {
      transform-origin: center top;
      transform: scaleX(1.3) scaleY(0.7);
    }
    #{$i * 15% + 40%},
    100% {
      transform-origin: center top;
      transform: scaleX(1) scaleY(1);
    }
  }
}

@mixin loader($size) {
  $box-size: $size * 0.12;

  width: $size;

  .box {
    width: $box-size;
    height: $box-size;

    &::after {
      box-shadow: 0px 0px $size/25 0 adjust-color($color: map-get($map: $orange, $key: "normal"), $alpha: 0.4);
    }

    &:nth-child(1) {
      animation: slide-#{$size} $duration ease-in-out infinite alternate;
    }
  }

  @keyframes slide-#{$size} {
    0% {
      transform: translatex(0);
    }
    100% {
      transform: translatex($size - ($box-size * 1.25));
    }
  }
}

.loader_200 {
  @include loader(200px);
}

.loader_60 {
  @include loader(60px);
}
